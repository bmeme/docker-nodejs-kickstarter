#!/usr/bin/env bash

if test -f ".env"; then
    source .env 
fi

CN="\\033[0m"
CR="\\033[91m"
CG="\\033[92m"
CY="\\033[93m"
CB="\\033[94m"
CT="\\033[37m"
TB="\\033[1m"

LOCAL_PATH=$(pwd)/.bmeme/bin

if [[ "$1" == "env" ]]; then
    if [[ ":$PATH:" != *":$LOCAL_PATH:"* ]]; then
        echo -n "export PATH=\"${LOCAL_PATH}:\${PATH}\""
    fi
    exit 0
fi

if [[ "$1" == "destroy" ]]; then
    echo "Cleaning up your docker environment.."
    docker-compose down -v
    exit 0
fi

if [[ "$1" == "start" ]]; then
    echo "Starting your docker environment.."
    docker-compose start
    exit 0
fi

if [[ "$1" == "stop" ]]; then
    echo "Stopping your docker environment.."
    docker-compose stop
    exit 0
fi

if [[ "$1" == "build" ]]; then
    echo ""
    echo "=============================================================================================="
    echo -e " ${CB}${TB}Node.JS Kickstarter${CN} - ${CB}Configuration${CN} "
    echo "=============================================================================================="
    echo ""

    if test -f ".env"; then
        echo -e "${CG}Env${CN} file already configured."
    else
        echo "Please specify the vendor for your new project."
        echo "Typically this is your organization name, or the organization the projects belongs to."
        echo -n -e "${CY}Vendor:${CN} "
        read VENDOR

        echo ""
        echo "Please specify the name for your new project."
        echo -n -e "${CY}Project name:${CN} "
        read PROJECT

        echo ""
        echo -e "Configuring ${CG}env${CN} file..."
        sed "s/__PROJECT__/${PROJECT}/g;s/__VENDOR__/${VENDOR}/g" .env.dist > .env

        echo ""
        echo -e "Removing ${CG}.env.dist${CN} file..."
        rm -f .env.dist
    fi

    echo ""
    echo -e "Setting up ${CG}docker environment${CN} ..."
    echo ""
    docker-compose build --build-arg FIX_UID=$(id -u) --build-arg FIX_GID=$(id -g)
    docker-compose up -d

    echo ""
    if [[ ":$PATH:" == *":$LOCAL_PATH:"* ]]; then
        echo -e "Your ${CG}\$PATH${CN} is correctly set"
    else
        echo -e "Your ${CG}\$PATH${CN} is not configured."
        echo ""
        echo -e "Run: ${CY}eval \$(${0} env)${CN}"
        echo ""
    fi

    echo ""
    echo "=============================================================================================="
    echo -e " ${CB}${TB}Node.JS Kickstarter${CN} - ${CB}Configuration completed${CN}"
    echo ""
    echo -e "${CY}\"In some ways, programming is like painting.\n You start with a blank canvas and certain basic raw materials.\n You use a combination of science, art, and craft to determine what to do with them.\"${CN}"
    echo -e "${CG}Andrew Hunt${CN}"
    echo "=============================================================================================="
    echo ""
    exit 0
fi

echo ""
echo "=============================================================================================="
echo -e " ${CB}${TB}Node.JS Kickstarter${CN} - ${CB}Help${CN} "
echo "=============================================================================================="
echo ""
echo -e "${CY}${0} build${CN}         --  Configure and build your environment"
echo -e "${CY}${0} start${CN}         --  Start your environment"
echo -e "${CY}${0} stop${CN}          --  Stop your environment"
echo -e "${CY}${0} destroy${CN}       --  Clean up your environment"
echo -e "${CY}eval \$(${0} env)${CN}   --  Set your \$PATH in order to use c script wrapper"
echo ""

if test -f ".env"; then
    echo -e "${CR}${TB}DNS aliases${CN}"
    echo ""
    echo -e "These aliases work if you have ${CY}dinghy-http-proxy${CN} on MacOs or ${CY}dnsdock${CN} on Linux configured."
    echo ""
    echo -e " - ${CG}http://app.${PROJECT_NAME}.${PROJECT_VENDOR}.docker${CN}"
    echo ""
fi
exit 0
